{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","onAddMovie","useState","stateMovie","title","setTitile","isMovieFound","setIsMovieFound","clearFields","htmlFor","value","onChange","event","target","type","id","placeholder","classNames","onClick","fetch","then","response","json","result","Response","Error","getMovie","catch","error","console","log","App","setMovies","some","film","allFilm","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAa,UAAQ,aAApC,SAEE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAKV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,cAAlC,SAAiDD,EAAMK,aAI3D,sBAAKJ,UAAU,UAAU,UAAQ,UAAjC,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,gBCARC,G,MAA6B,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC3C,EAA4BC,mBAAuB,MAAnD,mBAAOb,EAAP,KAAcc,EAAd,KACA,EAA2BD,mBAAS,IAApC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAwCH,oBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KAEMC,EAAc,WAClBH,EAAU,IACVF,EAAW,OAcb,OACE,qCACE,uBAAMb,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQmB,QAAQ,cAAjC,yBAIA,qBAAKnB,UAAU,UAAf,SACE,uBACEoB,MAAON,EACPO,SAAU,SAACC,GACTP,EAAUO,EAAMC,OAAOH,QAEzBI,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ1B,UAAW2B,IAAW,QAAS,CAAE,YAAaX,QAIjDA,GAGC,mBAAGhB,UAAU,iBAAb,qDAOJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEwB,KAAK,SACLxB,UAAU,kBACV4B,QA/Ca,YCrBH,SAACd,GACvB,OAAOe,MAAM,GAAD,OAHF,2CAGE,cAAaf,IACtBgB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,GAAwB,UAApBA,EAAOC,SACT,MAAM,IAAIC,MAAM,cAGlB,OAAOF,MDcTG,CAAStB,GACNgB,MAAK,SAAAC,GAAQ,OAAIlB,EAAWkB,MAC5BM,OAAM,SAAAC,GAELC,QAAQC,IAAIF,GACZrB,GAAgB,GAChBC,QAqCI,4BASF,qBAAKlB,UAAU,UAAf,SACE,wBACEwB,KAAK,SACLxB,UAAU,oBACV4B,QAAS,WACO,OAAV7B,IACFY,EAAWZ,GACXmB,IACAD,GAAgB,KAPtB,qCAiBLlB,GACC,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,YE5Ff0C,EAAgB,WAC3B,MAA4B7B,mBAAkB,IAA9C,mBAAOL,EAAP,KAAemC,EAAf,KAUA,OACE,sBAAK1C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWW,WAdA,SAACZ,GACKQ,EAAOoC,MAAK,SAAAC,GAAI,OAAIA,EAAKnC,SAAWV,EAAMU,WAG7DiC,GAAU,SAAAG,GAAO,4BAAQA,GAAR,CAAiB9C,gBCRxC+C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b892f496.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\n\nimport { getMovie } from '../../api';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  onAddMovie: (movie: Movie) => void,\n}\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [movie, stateMovie] = useState<Movie | null>(null);\n  const [title, setTitile] = useState('');\n  const [isMovieFound, setIsMovieFound] = useState(false);\n\n  const clearFields = () => {\n    setTitile('');\n    stateMovie(null);\n  };\n\n  const findMovieHandler = () => {\n    getMovie(title)\n      .then(response => stateMovie(response))\n      .catch(error => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n        setIsMovieFound(true);\n        clearFields();\n      });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={title}\n              onChange={(event) => {\n                setTitile(event.target.value);\n              }}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': isMovieFound })}\n            />\n          </div>\n\n          {isMovieFound\n          && (\n\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovieHandler}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (movie !== null) {\n                  onAddMovie(movie);\n                  clearFields();\n                  setIsMovieFound(false);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n\n    </>\n  );\n};\n","const API = 'https://www.omdbapi.com/?apikey=a704b4ff';\n\nexport const getMovie = (title: string): Promise<Movie> => {\n  return fetch(`${API}&t=${title}`)\n    .then(response => response.json())\n    .then(result => {\n      if (result.Response === 'False') {\n        throw new Error('some error');\n      }\n\n      return result;\n    });\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    const isMovieExist = movies.some(film => film.imdbID === movie.imdbID);\n\n    if (!isMovieExist) {\n      setMovies(allFilm => [...allFilm, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}